# Basic pagy-on-docker development environment
# it will keep the installed gems and HOME in the pagy_bundle and pagy_user_home pagy-on-docker volumes
# the pagy-jekill service will be updating a live preview for the docs

# USAGE
#   cd pagy-on-docker
#   docker-compose up pagy           # only pagy service (running ruby development and test environment)
#   docker-compose up pagy-jekyll    # pagy and pagy-jekyll services (add the docs live site)

version: "3.8"

services:

  # ruby dev and test pagy development
  pagy:
    image: pagy:4-backport
    build:
      context: .
      dockerfile: pagy-backport.dockerfile
      # set env variables with your user info
      args:
        user: $USER
        group: $GROUP
        uid: $UID
        gid: $GID
        password: "${PASSWORD:-rubydev}"
        term: ${TERM:-xterm-256color}
    container_name: pagy
    volumes:
      - ..:/opt/project
      - ..:/pagy
      - bundle:/usr/local/bundle
      - user_home:/home/$USER
    environment:
      - HTML_REPORTS
    stdin_open: true
    tty: true

  # Serve the docs site live at http://0.0.0.0:4000
  # Use it to check/edit the rendered content in the docs dir
  pagy-jekyll:
    depends_on:
      - pagy
    image: pagy-jekyll:latest
    build:
      context: .
      dockerfile: pagy-jekyll.dockerfile
    container_name: pagy-jekyll
    environment:
      - JEKYLL_GITHUB_TOKEN
    ports:
      - "4000:4000"
      - "35729:35729"
    volumes:
      - ../docs:/opt/docs
      - docs_site:/opt/site
    command: |
      jekyll serve \
          --incremental \
          --livereload \
          --watch \
          --force-polling \
          --host 0.0.0.0 \
          --baseurl '' \
          --source /opt/docs \
          --destination /opt/site
    stdin_open: true
    tty: true

volumes:
  bundle:
    name: pagy_backport_bundle
  user_home:
    name: pagy_backport_user_home
  docs_site:
    name: pagy_docs_site

