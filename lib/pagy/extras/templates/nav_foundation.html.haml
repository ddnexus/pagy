-# This template is i18n-ready: if you don't use i18n, then you can replace the pagy_t
-# calls with the actual strings ("&lsaquo; Prev", "Next &rsaquo;", "&hellip;").

-# The link variable is set to a proc that returns the link tag.
-# Usage: link.call( page_number [, text [, extra_attributes_string ]])

- link = pagy_link_proc(pagy)

%nav.pagy-nav-foundation{"role" => "navigation", "aria-label" => "Pagination"}

  %ul.pagination

    - if pagy.prev
      %li.prev!= link.call(pagy.prev, pagy_t('pagy.nav.prev'), 'aria-label="previous"')
    - else
      %li.prev.disabled
        != pagy_t('pagy.nav.prev')

    - pagy.series.each do |item|                      # series example: [1, :gap, 7, 8, "9", 10, 11, :gap, 36]
      - if item.is_a?(Integer)                        # page link
        %li!= link.call(item)

      - elsif item.is_a?(String)                      # current page
        %li.current
          %span.show-for-sr You're on page
          != item

      - elsif item == :gap                            # page gap
        %li.disabled.gap
          != pagy_t('pagy.nav.gap')

    - if pagy.next
      %li.next!= link.call(pagy.next, pagy_t('pagy.nav.next'), 'aria-label="next"')
    - else
      %li.next.disabled
        != pagy_t('pagy.nav.next')
