{
  "version": 3,
  "sources": ["../../src/pagy.ts"],
  "sourcesContent": [
    "type InitArgs       = [\"nav\", NavArgs] | [\"nav_js\", NavJsArgs] | [\"combo_js\", ComboJsArgs] | [\"selector_js\", SelectorJsArgs]\ntype NavArgs        = readonly [OptionArgs?]\ntype NavJsArgs      = readonly [Tokens, Sequels, null | LabelSequels, OptionArgs?]\ntype ComboJsArgs    = readonly [string, OptionArgs?]\ntype SelectorJsArgs = readonly [number, string, OptionArgs?]\ntype Cutoff         = readonly [string | number | boolean]\ntype Update         = [string, Cutoff | undefined ]\ntype Cutoffs        = [null, ...Cutoff[]]\ntype CutoffsParam   = [string, number, null | Cutoff, Cutoff | undefined]\n\ninterface OptionArgs {\n  readonly page_param?:string\n  readonly cutoffs_param?:string\n  readonly update?:Update\n}\n\ninterface Tokens {\n  readonly before:string\n  readonly a:string\n  readonly current:string\n  readonly gap:string\n  readonly after:string\n}\n\ninterface Sequels {readonly [width:string]:(string | number)[]}\ninterface LabelSequels {readonly [width:string]:string[]}\ninterface NavJsElement extends Element {pagyRender():void}\n\nconst Pagy = (() => {\n  // The observer instance for responsive navs\n  const rjsObserver = new ResizeObserver(\n      entries => entries.forEach(e => e.target.querySelectorAll<NavJsElement>(\".pagy-rjs\")\n                                       .forEach(el => el.pagyRender())));\n\n  const b64 = {\n    encode:     (unicode:string) => btoa(String.fromCharCode(...(new TextEncoder).encode(unicode))),\n    toSafe:      (unsafe:string) => unsafe.replace(/=/g, \"\").replace(/[+/]/g, (match) => match == \"+\" ? \"-\" : \"_\"),\n    safeEncode: (unicode:string) => b64.toSafe(b64.encode(unicode)),\n    decode:      (base64:string) => (new TextDecoder()).decode(Uint8Array.from(atob(base64), c => c.charCodeAt(0))),\n    // toUnsafe:      (safe:string) => safe.replace(/[-_]/g, (match) => match == \"-\" ? \"+\" : \"/\"),\n    // safeDecode:  (base64:string) => b64.decode(b64.toUnsafe(base64))\n  };\n\n  // Init the *_nav helpers\n  const initNav = (el:Element, [opts]:NavArgs) => {\n    initCutoff(el, opts);\n  };\n\n  // Init the Cutoff features\n  const initCutoff = (el:Element, opts:OptionArgs | undefined) => {\n    if (!opts || !Array.isArray(opts.update)                 // not enabled\n              || !opts.cutoffs_param || !opts.page_param) {  // Bad opts\n      // console.warn(\"Failed Pagy.initCutoff():%o\\n Bad opts \\n%o\", el, opts);\n      return;\n    }\n    // Remove the cutoffs param from the address bar\n    history.replaceState(null, \"\", location.href.replace(RegExp(`&?${opts.cutoffs_param}=.*$`), \"\"));\n    // eslint-disable-next-line prefer-const\n    let [key, latest] = opts.update;\n    key             ||= \"pagy-\" + Date.now().toString(36);\n    const cs          = sessionStorage.getItem(key);\n    const cutoffs     = <Cutoffs>(cs ? JSON.parse(cs) : [null]);\n    if (latest) {\n      cutoffs.push(latest);\n      sessionStorage.setItem(key, JSON.stringify(cutoffs));\n      // opts.update[1] = undefined; // stop updating if raan multiple times\n    }\n    // Add cutoffs param/value to the query string of the clicked links\n    el.addEventListener(\"click\", (e) => {\n      const a:HTMLAnchorElement = e.target as HTMLAnchorElement; // checked below\n      if (a && a.nodeName == \"A\" && a.href.length > 0) {\n        const url   = a.href;\n        const re    = new RegExp(`(?<=\\\\?.*)\\\\b${opts.page_param}=([\\\\d]+)`);  // find the numeric page\n        const page  = parseInt(<string>url.match(re)?.[1]);                    // sure that page=\\d+ is in href\n        const value = b64.safeEncode(JSON.stringify(<CutoffsParam>[key,\n                                                     cutoffs.length,   // actual cutoffs + 1 (first null)\n                                                     cutoffs[page - 1],\n                                                     cutoffs[page]]));\n        a.href      = url + `&${opts.cutoffs_param}=${value}`;   // \"&\" because the query_string is always present\n        console.warn(\"listener run\");\n      }\n    });\n  };\n\n  // Init the *_nav_js helpers\n  const initNavJs = (el:NavJsElement, [tokens, sequels, labelSequels, opts]:NavJsArgs) => {\n    const container = el.parentElement ?? el;\n    const widths    = Object.keys(sequels).map(w => parseInt(w)).sort((a, b) => b - a);\n    let lastWidth   = -1;\n    const fillIn    = (a:string, page:string, label:string) =>\n                        a.replace(/__pagy_page__/g, page).replace(/__pagy_label__/g, label);\n    (el.pagyRender = () => {\n      const width = widths.find(w => w < container.clientWidth) || 0;\n      if (width === lastWidth) { return } // no change: abort\n      let html     = tokens.before;       // already trimmed by ruby in html\n      const series = sequels[width.toString()];\n      const labels = labelSequels?.[width.toString()] ?? series.map(l => l.toString());\n      series.forEach((item, i) => {\n        const label = labels[i];\n        let filled;\n        if (typeof item == \"number\") {\n          filled = fillIn(tokens.a, item.toString(), label);\n          if (typeof opts?.page_param == \"string\" && item == 1) { filled = trim(filled, opts.page_param) }\n        } else if (item == \"gap\") {\n          filled = tokens.gap;\n        } else { // active page\n          filled = fillIn(tokens.current, item, label);\n        }\n        html += filled;\n      });\n      html += tokens.after;   // already trimmed by ruby in html\n      el.innerHTML = \"\";\n      el.insertAdjacentHTML(\"afterbegin\", html);\n      lastWidth = width;\n    })();\n    if (el.classList.contains(\"pagy-rjs\")) { rjsObserver.observe(container) }\n  };\n\n  // Init the *_combo_nav_js helpers\n  const initComboJs = (el:Element, [url_token, opts]:ComboJsArgs) =>\n      initInput(el, inputValue => [inputValue, url_token.replace(/__pagy_page__/, inputValue)], opts);\n\n  // Init the limit_selector_js helper\n  const initSelectorJs = (el:Element, [from, url_token, opts]:SelectorJsArgs) => {\n    initInput(el, inputValue => {\n      const page = Math.max(Math.ceil(from / parseInt(inputValue)), 1).toString();\n      const url = url_token.replace(/__pagy_page__/, page).replace(/__pagy_limit__/, inputValue);\n      return [page, url];\n    }, opts);\n  };\n\n  // Init the input element\n  const initInput = (el:Element, getVars:(v:string) => [string, string], opts?:OptionArgs) => {\n    const input   = el.querySelector(\"input\") as HTMLInputElement;\n    const link    = el.querySelector(\"a\") as HTMLAnchorElement;\n    const initial = input.value;\n    const action  = () => {\n      if (input.value === initial) { return }  // not changed\n      const [min, val, max] = [input.min, input.value, input.max].map(n => parseInt(n) || 0);\n      if (val < min || val > max) {  // reset invalid/out-of-range\n        input.value = initial;\n        input.select();\n        return;\n      }\n      let [page, url] = getVars(input.value);   // eslint-disable-line prefer-const\n      if (typeof opts?.page_param == \"string\" && page === \"1\") { url = trim(url, opts.page_param) }\n      link.href = url;\n      link.click();\n    };\n    [\"change\", \"focus\"].forEach(e => input.addEventListener(e, () => input.select()));  // auto-select\n    input.addEventListener(\"focusout\", action);                                         // trigger action\n    input.addEventListener(\"keypress\", e => { if (e.key == \"Enter\") { action() } });   // trigger action\n  };\n\n  // Trim the ${page-param}=1 params in links\n  const trim = (a:string, param:string) =>\n      a.replace(new RegExp(`[?&]${param}=1\\\\b(?!&)|\\\\b${param}=1&`), \"\");\n\n  // Public interface\n  return {\n    version: \"9.3.3\",\n\n    // Scan for elements with a \"data-pagy\" attribute and call their init functions with the decoded args\n    init(arg?:Element) {\n      const target   = arg instanceof Element ? arg : document;\n      const elements = target.querySelectorAll(\"[data-pagy]\");\n      for (const el of elements) {\n        try {\n          const [keyword, ...args] = <InitArgs>JSON.parse(b64.decode(<string>el.getAttribute(\"data-pagy\")));\n          if (keyword == \"nav\") {\n            initNav(el, <NavArgs>args);\n          } else if (keyword == \"nav_js\") {\n            initNavJs(<NavJsElement>el, <NavJsArgs><unknown>args);\n          } else if (keyword == \"combo_js\") {\n            initComboJs(el, <ComboJsArgs><unknown>args);\n          } else if (keyword == \"selector_js\") {\n            initSelectorJs(el, <SelectorJsArgs><unknown>args);\n          }\n          //else { console.warn(\"Failed Pagy.init(): %o\\nUnknown keyword '%s'\", el, keyword) }\n        } catch (err) { console.warn(\"Failed Pagy.init(): %o\\n%s\", el, err) }\n      }\n    }\n  };\n})();\n\nexport default Pagy;\n"
  ],
  "mappings": "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",
  "debugId": "75134F4BCF68C50C64756E2164756E21",
  "names": []
}