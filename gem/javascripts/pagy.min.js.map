{
  "version": 3,
  "sources": ["../../src/pagy.ts"],
  "sourcesContent": [
    "type NavArgs = readonly [OptionArgs?]\ntype NavJsArgs = readonly [Tokens, Sequels, null | LabelSequels, OptionArgs?]\ntype ComboJsArgs = readonly [string, OptionArgs?]\ntype SelectorJsArgs = readonly [number, string, OptionArgs?]\ntype InitArgs = [\"nav\", NavArgs] | [\"nav_js\", NavJsArgs] | [\"combo_js\", ComboJsArgs] | [\"selector_js\", SelectorJsArgs]\ntype Cutoff = readonly [string | number | boolean]\ntype Cutoffs = [null, ...Cutoff[]]\ntype CutoffsParam = [string, number, null | Cutoff, Cutoff | undefined]\ntype SpliceArgs = [number, number, Cutoff] | undefined\ntype Update = [string, SpliceArgs]\n\ninterface OptionArgs {\n  readonly page_param?:string\n  readonly cutoffs_param?:string\n  readonly update?:Update\n}\n\ninterface Tokens {\n  readonly before:string\n  readonly a:string\n  readonly current:string\n  readonly gap:string\n  readonly after:string\n}\n\ninterface Sequels {readonly [width:string]:(string | number)[]}\n\ninterface LabelSequels {readonly [width:string]:string[]}\n\ninterface NavJsElement extends Element {pagyRender():void}\n\nconst Pagy = (() => {\n  // The observer instance for responsive navs\n  const rjsObserver = new ResizeObserver(\n      entries => entries.forEach(e => e.target.querySelectorAll<NavJsElement>(\".pagy-rjs\")\n                                       .forEach(el => el.pagyRender())));\n\n  const b64 = {\n    encode:     (unicode:string) => btoa(String.fromCharCode(...(new TextEncoder).encode(unicode))),\n    toSafe:     (unsafe:string)  => unsafe.replace(/=/g, \"\").replace(/[+/]/g, (match) => match == \"+\" ? \"-\" : \"_\"),\n    safeEncode: (unicode:string) => b64.toSafe(b64.encode(unicode)),\n    decode:     (base64:string)  => (new TextDecoder()).decode(Uint8Array.from(atob(base64), c => c.charCodeAt(0))),\n    // toUnsafe:   (safe:string)    => safe.replace(/[-_]/g, (match) => match == \"-\" ? \"+\" : \"/\"),\n    // safeDecode: (base64:string)  => b64.decode(b64.toUnsafe(base64))\n  };\n\n  // Init the *_nav helpers\n  const initNav = (el:Element, [opts]:NavArgs) => {\n    initKeysetForUI(el, opts);\n  };\n\n  // Init the keyset features\n  const initKeysetForUI = (el:Element, opts:OptionArgs | undefined) => {\n    if (opts === undefined || !Array.isArray(opts.update)) { return } // not enabled\n    if (typeof opts.cutoffs_param !== \"string\" || typeof opts.page_param !== \"string\") {\n      console.warn(\"Skipped Pagy.initKeysetForUI():%o\\n bad opts \\n%o\", el, opts);\n      return;\n    }\n    // Get key\n    const [k, spliceArgs] = opts.update;\n    let key = k;\n    if (key === null) {\n      let maxKey = sessionStorage.getItem(\"maxKey\");\n      if (maxKey === null) { maxKey = \"0\" }\n      const n = parseInt(maxKey) + 1;\n      sessionStorage.setItem(\"maxKey\", n.toString());\n      key = n.toString(36);\n    }\n    // The case of an unknown key and page > 1 should create links that go to\n    // Get updated cutoffs\n    const c = sessionStorage.getItem(key);\n    const cutoffs = c === null ? [null] as Cutoffs : JSON.parse(c) as Cutoffs;\n    if (spliceArgs !== undefined) {\n      cutoffs.splice(...spliceArgs);\n      sessionStorage.setItem(key, JSON.stringify(cutoffs));\n    }\n    // Add cutoff param/value to the query string of the clicked link\n    const cutoff_name = opts.cutoffs_param;\n    const page_name   = opts.page_param;\n    el.addEventListener(\"click\", (e) => {\n      const a:HTMLAnchorElement = e.target as HTMLAnchorElement; // checked below\n      if (a && a.nodeName == \"A\" && a.href !== undefined) {\n        const url = a.href;\n        // find page from url\n        const re = new RegExp(`(?<=\\\\?.*)${page_name}=([\\\\d]+)`);  // refactor removing the page param\n        const p = url.match(re)?.[1]; // no trim allowed\n        if (typeof p !== \"string\") {\n          return;\n        }\n        const page  = parseInt(p);\n        const value = b64.safeEncode(JSON.stringify([key, cutoffs.length, cutoffs[page - 1], cutoffs[page]] as CutoffsParam));\n        a.href      = url + (url.match(/\\?/) === null ? \"?\" : \"&\") + `${cutoff_name}=${value}`;\n      }\n    });\n  };\n\n  // Init the *_nav_js helpers\n  const initNavJs = (el:NavJsElement, [tokens, sequels, labelSequels, opts]:NavJsArgs) => {\n    const container = el.parentElement ?? el;\n    const widths = Object.keys(sequels).map(w => parseInt(w)).sort((a, b) => b - a);\n    let lastWidth = -1;\n    const fillIn = (a:string, page:string, label:string):string =>\n        a.replace(/__pagy_page__/g, page).replace(/__pagy_label__/g, label);\n    (el.pagyRender = function () {\n      const width = widths.find(w => w < container.clientWidth) || 0;\n      if (width === lastWidth) { return } // no change: abort\n      let html     = tokens.before;       // already trimmed by ruby in html\n      const series = sequels[width.toString()];\n      const labels = labelSequels?.[width.toString()] ?? series.map(l => l.toString());\n      series.forEach((item, i) => {\n        const label = labels[i];\n        let filled;\n        if (typeof item === \"number\") {\n          filled = fillIn(tokens.a, item.toString(), label);\n          if (typeof opts?.page_param === \"string\" && item === 1) { filled = trim(filled, opts.page_param) }\n        } else if (item === \"gap\") {\n          filled = tokens.gap;\n        } else { // active page\n          filled = fillIn(tokens.current, item, label);\n        }\n        html += filled;\n      });\n      html += tokens.after;   // already trimmed by ruby in html\n      el.innerHTML = \"\";\n      el.insertAdjacentHTML(\"afterbegin\", html);\n      lastWidth = width;\n    })();\n    if (el.classList.contains(\"pagy-rjs\")) { rjsObserver.observe(container) }\n  };\n\n  // Init the *_combo_nav_js helpers\n  const initComboJs = (el:Element, [url_token, opts]:ComboJsArgs) =>\n      initInput(el, inputValue => [inputValue, url_token.replace(/__pagy_page__/, inputValue)], opts);\n\n  // Init the limit_selector_js helper\n  const initSelectorJs = (el:Element, [from, url_token, opts]:SelectorJsArgs) => {\n    initInput(el, inputValue => {\n      const page = Math.max(Math.ceil(from / parseInt(inputValue)), 1).toString();\n      const url = url_token.replace(/__pagy_page__/, page).replace(/__pagy_limit__/, inputValue);\n      return [page, url];\n    }, opts);\n  };\n\n  // Init the input element\n  const initInput = (el:Element, getVars:(v:string) => [string, string], opts?:OptionArgs) => {\n    const input = el.querySelector(\"input\") as HTMLInputElement;\n    const link = el.querySelector(\"a\") as HTMLAnchorElement;\n    const initial = input.value;\n    const action = function () {\n      if (input.value === initial) { return }  // not changed\n      const [min, val, max] = [input.min, input.value, input.max].map(n => parseInt(n) || 0);\n      if (val < min || val > max) {  // reset invalid/out-of-range\n        input.value = initial;\n        input.select();\n        return;\n      }\n      let [page, url] = getVars(input.value);   // eslint-disable-line prefer-const\n      if (typeof opts?.page_param === \"string\" && page === \"1\") { url = trim(url, opts.page_param) }\n      link.href = url;\n      link.click();\n    };\n    [\"change\", \"focus\"].forEach(e => input.addEventListener(e, () => input.select()));  // auto-select\n    input.addEventListener(\"focusout\", action);                                         // trigger action\n    input.addEventListener(\"keypress\", e => { if (e.key === \"Enter\") { action() } });   // trigger action\n  };\n\n  // Trim the ${page-param}=1 params in links\n  const trim = (a:string, param:string) =>\n      a.replace(new RegExp(`[?&]${param}=1\\\\b(?!&)|\\\\b${param}=1&`), \"\");\n\n  // Public interface\n  return {\n    version: \"9.3.3\",\n\n    // Scan for elements with a \"data-pagy\" attribute and call their init functions with the decoded args\n    init(arg?:Element) {\n      const target = arg instanceof Element ? arg : document;\n      const elements = target.querySelectorAll(\"[data-pagy]\");\n      for (const el of elements) {\n        try {\n          // const uint8array = Uint8Array.from(atob(el.getAttribute(\"data-pagy\") as string), c => c.charCodeAt(0));\n          // const [keyword, ...args] = JSON.parse((new TextDecoder()).decode(uint8array)) as InitArgs; // base64-utf8 -> JSON ->// Array\n          const [keyword, ...args] = JSON.parse(b64.decode(el.getAttribute(\"data-pagy\") as string)) as InitArgs; // base64-utf8 -> JSON ->// Array\n          if (keyword === \"nav\") {\n            initNav(el, args as unknown as NavArgs);\n          } else if (keyword === \"nav_js\") {\n            initNavJs(el as NavJsElement, args as unknown as NavJsArgs);\n          } else if (keyword === \"combo_js\") {\n            initComboJs(el, args as unknown as ComboJsArgs);\n          } else if (keyword === \"selector_js\") {\n            initSelectorJs(el, args as unknown as SelectorJsArgs);\n          } else {\n            console.warn(\"Skipped Pagy.init(): %o\\nUnknown keyword '%s'\", el, keyword);\n          }\n        } catch (err) { console.warn(\"Skipped Pagy.init(): %o\\n%s\", el, err) }\n      }\n    }\n  };\n})();\n\nexport default Pagy;\n"
  ],
  "mappings": "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",
  "debugId": "93F1AF5D099ADE0164756E2164756E21",
  "names": []
}