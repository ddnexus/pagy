{
  "version": 3,
  "sources": ["../../src/pagy.ts"],
  "sourcesContent": [
    "type InitArgs       = [\"nav\", CutoffArgs] | [\"nav_js\", NavJsArgs] | [\"combo_js\", ComboJsArgs] | [\"selector_js\", SelectorJsArgs]\ntype CutoffArgs     = readonly [pageSym:string, update:[storageKey:string, splice?:SpliceArgs]]\ntype SpliceArgs     = readonly [start:number, deleteCount:number, ...items:Cutoff[]]\ntype Cutoff         = readonly (string | number | boolean)[]\ntype CutoffsParams  = [pagyId:string, storageKey:string, pageNumber:number, pages:number, prevCutoff?:Cutoff, pageCutoff?:Cutoff]\ntype NavJsArgs      = readonly [Tokens, Sequels, LabelSequels, CutoffArgs]\ntype ComboJsArgs    = readonly [urlToken:string]\ntype SelectorJsArgs = readonly [from:number, urlToken:string]\ninterface SyncData {\n  from?: number\n  to?: number\n  key: string\n  cutoffs?: string\n}\ninterface Tokens {\n  readonly before: string\n  readonly a: string\n  readonly current: string\n  readonly gap: string\n  readonly after: string\n}\ninterface Sequels {readonly [width:string]:(string | number)[]}\ninterface LabelSequels {readonly [width:string]:string[]}\ninterface NavJsElement extends Element {pagyRender():void}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst Pagy = (() => {\n  const storageSupport = 'sessionStorage' in window && 'BroadcastChannel' in window;\n  let storage: Storage, sync: BroadcastChannel, tabId: number;\n  if (storageSupport) {\n    storage = sessionStorage; // shorten the .min.js\n    sync    = new BroadcastChannel(\"pagy\");\n    tabId   = Date.now();\n    // Sync the sessionStorage keys for the cutoffs opened in a new tab/window\n    sync.addEventListener(\"message\", (e:MessageEvent<SyncData>) => {\n      if (e.data.from) { // request cutoffs\n        const cutoffs = storage.getItem(e.data.key);\n        if (cutoffs) {\n          sync.postMessage(<SyncData>{to: e.data.from, key: e.data.key, cutoffs: cutoffs});\n        } // send response\n      } else if (e.data.to) {  // receive cutoffs\n        if (e.data.to == tabId) {\n          storage.setItem(e.data.key, <string>e.data.cutoffs);\n        }\n      }\n    });\n  }\n  // The observer instance for responsive navs\n  const rjsObserver = new ResizeObserver(\n      entries => entries.forEach(e => {\n        e.target.querySelectorAll<NavJsElement>(\".pagy-rjs\").forEach(el => el.pagyRender());\n      }));\n\n  const B64Encode     = (unicode:string) => btoa(String.fromCharCode(...(new TextEncoder).encode(unicode))),\n        B64Safe       = (unsafe:string)  => unsafe.replace(/=/g, \"\").replace(/[+/]/g, (match) => match == \"+\" ? \"-\" : \"_\"),\n        B64SafeEncode = (unicode:string) => B64Safe(B64Encode(unicode)),\n        B64Decode     = (base64:string)  => (new TextDecoder()).decode(Uint8Array.from(atob(base64), c => c.charCodeAt(0)));\n        // B64Unsafe     = (safe:string) => safe.replace(/[-_]/g, (match) => match == \"-\" ? \"+\" : \"/\"),\n        // B64SafeDecode = (base64:string) => B64Decode(B64Unsafe(base64))\n\n  // Init the Cutoffs features\n  const initCutoffs = async (el:Element, [pageSym, [storageKey, spliceArgs]]:CutoffArgs) => {\n    if (!storageSupport) { return }\n\n    let browserId = document.cookie.split(/;\\s+/)  // it works even if malformed\n                            .find((row) => row.startsWith(\"pagy=\"))\n                            ?.split(\"=\")[1];\n    if (!browserId) {\n      document.cookie = \"pagy=\" + (browserId = Math.floor(Math.random() * 36 ** 3).toString(36));\n    }\n    if (storageKey && !(storageKey in storage)) {\n      // Sync the sessiongStorage from other tabs/windows (e.g. open page in new tab/window)\n      sync.postMessage(<SyncData>{ from: tabId, key: storageKey });\n      // Wait for the listener to copy the cutoffs in the current sessionStorage\n      await new Promise<string|null>((resolve) => setTimeout(() => resolve(\"\"), 100));\n    }\n    storageKey  ||= \"pagy-\" + Date.now().toString(36);\n    const data    = storage.getItem(storageKey),\n          cutoffs = <Cutoff[]>(data ? JSON.parse(data) : [undefined]);\n    if (spliceArgs) {\n      cutoffs.splice(...spliceArgs);\n      storage.setItem(storageKey, JSON.stringify(cutoffs));\n    }\n    // Augment the page param of each url\n    for (const a of <HTMLAnchorElement[]><unknown>el.querySelectorAll('a[href]')) {\n      const url     = a.href,\n            re      = new RegExp(`(?<=\\\\?.*)\\\\b${pageSym}=([\\\\d]+)`),  // find the numeric page\n            pageNum = parseInt(<string>url.match(re)?.[1]),            // page=\\d+ is always in href\n            value   = B64SafeEncode(JSON.stringify(<CutoffsParams>[browserId,\n                                                                   storageKey,\n                                                                   pageNum,\n                                                                   cutoffs.length,       // pages\n                                                                   cutoffs[pageNum - 1], // prevCutoff\n                                                                   cutoffs[pageNum]]));  // pageCutoff\n      a.href = url.replace(re, `${pageSym}=${value}`);\n    }\n  };\n\n  // Init the *_nav_js helpers\n  const initNavJs = (el:NavJsElement, [tokens, sequels, labelSequels, cutoffArgs]:NavJsArgs) => {\n    const container = el.parentElement ?? el,\n          widths    = Object.keys(sequels).map(w => parseInt(w)).sort((a, b) => b - a);\n    let lastWidth   = -1;\n    const fillIn    = (a:string, page:string, label:string) =>\n                        a.replace(/__pagy_page__/g, page).replace(/__pagy_label__/g, label);\n    (el.pagyRender = () => {\n      const width = widths.find(w => w < container.clientWidth) || 0;\n      if (width === lastWidth) { return } // no change: abort\n\n      let html     = tokens.before;\n      const series = sequels[width.toString()],\n            labels = labelSequels?.[width.toString()] ?? series.map(l => l.toString());\n      series.forEach((item, i) => {\n        const label = labels[i];\n        let filled;\n        if (typeof item == \"number\") {\n          filled = fillIn(tokens.a, item.toString(), label);\n        } else if (item == \"gap\") {\n          filled = tokens.gap;\n        } else { // active page\n          filled = fillIn(tokens.current, item, label);\n        }\n        html += filled;\n      });\n      html += tokens.after;\n\n      el.innerHTML = \"\";\n      el.insertAdjacentHTML(\"afterbegin\", html);\n      lastWidth = width;\n      if (cutoffArgs) { void initCutoffs(el, cutoffArgs) }\n    })();\n    if (el.classList.contains(\"pagy-rjs\")) { rjsObserver.observe(container) }\n  };\n\n  // Init the *_combo_nav_js helpers\n  const initComboJs = (el:Element, [url_token]:ComboJsArgs) =>\n      initInput(el, inputValue => url_token.replace(/__pagy_page__/, inputValue));\n\n  // Init the limit_selector_js helper\n  const initSelectorJs = (el:Element, [from, url_token]:SelectorJsArgs) => {\n    initInput(el, inputValue => {\n      const page = Math.max(Math.ceil(from / parseInt(inputValue)), 1).toString();\n      return url_token.replace(/__pagy_page__/, page).replace(/__pagy_limit__/, inputValue);\n    });\n  };\n\n  // Init the input element\n  const initInput = (el:Element, getUrl:(v:string) => string) => {\n    const input   = <HTMLInputElement>el.querySelector(\"input\"),\n          link    = <HTMLAnchorElement>el.querySelector(\"a\"),\n          initial = input.value,\n          action  = () => {\n      if (input.value === initial) { return }  // not changed\n      const [min, val, max] = [input.min, input.value, input.max].map(n => parseInt(n) || 0);\n      if (val < min || val > max) {  // reset invalid/out-of-range\n        input.value = initial;\n        input.select();\n        return;\n      }\n      link.href = getUrl(input.value);\n      link.click();\n    };\n    [\"change\", \"focus\"].forEach(e => input.addEventListener(e, () => input.select()));  // auto-select\n    input.addEventListener(\"focusout\", action);                                         // trigger action\n    input.addEventListener(\"keypress\", e => { if (e.key == \"Enter\") { action() } });    // trigger action\n  };\n\n  // Public interface\n  return {\n    version: \"9.3.3\",\n\n    // Scan for elements with a \"data-pagy\" attribute and call their init functions with the decoded args\n    init(arg?:Element) {\n      const target   = arg instanceof Element ? arg : document,\n            elements = target.querySelectorAll(\"[data-pagy]\");\n      for (const el of elements) {\n        try {\n          const [keyword, ...args] = <InitArgs>JSON.parse(B64Decode(<string>el.getAttribute(\"data-pagy\")));\n          if (keyword == \"nav\") {\n            void initCutoffs(el, <CutoffArgs><unknown>args);\n          } else if (keyword == \"nav_js\") {\n            initNavJs(<NavJsElement>el, <NavJsArgs><unknown>args);\n          } else if (keyword == \"combo_js\") {\n            initComboJs(el, <ComboJsArgs><unknown>args);\n          } else if (keyword == \"selector_js\") {\n            initSelectorJs(el, <SelectorJsArgs><unknown>args);\n          }\n          //else { console.warn(\"Pagy.init() error: %o\\nUnknown keyword '%s'\", el, keyword) }\n        } catch (err) { console.warn(\"Pagy.init() error: %o\\n%s\", el, err) }\n      }\n    }\n  };\n})();\n"
  ],
  "mappings": "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",
  "debugId": "0974C14BAD5BAB2A64756E2164756E21",
  "names": []
}